version: '3.8'

services:
  # Servicio de la aplicación FastAPI
  api:
    build: 
      context: ./app
      dockerfile: Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=mydatabase
      - DB_USER=postgres
      - DB_PASSWORD=password123
    depends_on:
      - db
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - .:/app
    restart: unless-stopped

  # Servicio de base de datos PostgreSQL
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_scripts:/docker-entrypoint-initdb.d/
    networks:
      - app_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Servicio pgAdmin para gestión visual de la base de datos
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - app_network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Añadir este servicio al docker-compose.yml
  cache:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      
# Redes definidas
networks:
  app_network:
    driver: bridge
    name: app_network

# Volúmenes para persistencia
volumes:
  postgres_data:
    name: postgres_data
  pgadmin_data:
    name: pgadmin_data

